import os
from PIL import Image

source_config = [
    (140.0, 239.0, 84.0),
    (137.8, 263.7, 108.7),
    (138.9, 254.8, 99.8),
    (141.4, 238.9, 83.9),
    (143.8, 223.4, 68.4),
    (145.9, 211.2, 56.2),
    (148.4, 200.5, 45.5),
    (150.5, 191.8, 36.8),
    (152.5, 185.8, 30.8),
    (154.3, 182.3, 27.3),
    (155.3, 181.4, 26.4),
    (154.3, 185.7, 30.7),
    (151.6, 196.2, 41.2),
    (148.8, 209.5, 54.5),
    (147.8, 222.3, 67.3),
    (148.2, 247.7, 92.7),
    (147.2, 266.3, 111.3),
    (144.3, 262.5, 107.5),
    (140.6, 255.8, 100.8),
    (138.5, 246.8, 91.8),
    (138.3, 235.8, 80.8),
    (137.8, 223.6, 68.6),
    (137.3, 211.2, 56.2),
    (136.6, 199.2, 44.2),
    (136.1, 188.6, 33.6),
    (135.4, 180.9, 25.9),
    (135.5, 177.3, 22.3),
    (136.7, 178.5, 23.5),
    (138.3, 185.8, 30.8),
    (139.3, 199.5, 44.5),
    (200.7, 247.9, 136.3),
    (194.8, 245.9, 134.3),
    (183.7, 239.9, 128.3),
    (169.8, 233.9, 122.3),
    (156.8, 229.0, 117.4),
    (146.7, 226.0, 114.4),
    (139.7, 224.2, 112.6),
    (136.8, 224.0, 112.4),
    (142.8, 227.1, 115.5),
    (157.9, 237.1, 125.5),
    (177.9, 251.2, 139.6),
    (191.2, 259.1, 147.5),
    (194.2, 256.6, 145.0),
    (194.4, 251.0, 139.4),
    (192.7, 244.3, 132.7),
    (189.4, 237.4, 125.8),
    (185.3, 231.4, 119.8),
    (180.9, 226.8, 115.2),
    (177.0, 223.8, 112.2),
    (174.4, 222.0, 110.4),
    (173.4, 221.7, 110.1),
    (175.8, 221.8, 110.2),
    (181.8, 223.4, 111.8),
    (189.8, 227.4, 115.8),
    (197.3, 234.8, 123.2),
    (201.6, 242.8, 131.2),
    (200.5, 246.7, 135.1),
    (192.7, 244.0, 132.4),
    (180.7, 238.7, 127.1),
    (167.5, 232.7, 121.1),
    (155.2, 228.3, 116.7),
    (145.3, 225.3, 113.7),
    (138.8, 223.6, 112.0),
    (136.4, 222.9, 111.3),
    (142.3, 223.8, 112.2),
    (158.6, 228.5, 116.9),
    (181.2, 236.8, 125.2),
    (200.1, 245.6, 134.0),
    (211.4, 244.9, 133.3),
    (148.6, 216.8, 105.2),
    (147.6, 235.5, 123.9),
    (146.5, 246.8, 135.2),
    (147.3, 239.6, 128.0),
    (148.4, 228.6, 117.0),
    (149.6, 218.5, 106.9),
    (151.4, 210.8, 99.2),
    (153.2, 204.8, 93.2),
    (154.5, 200.5, 88.9),
    (156.4, 196.9, 85.3),
    (157.6, 195.8, 84.2),
    (159.2, 196.7, 85.1),
    (159.3, 200.6, 89.0),
    (158.6, 207.8, 96.2),
    (158.3, 216.7, 105.1),
    (157.4, 246.6, 190.8),
    (157.6, 255.4, 199.6),
    (157.8, 261.9, 206.1),
    (157.5, 261.0, 205.2),
    (156.8, 259.0, 203.2),
    (155.9, 256.0, 200.2),
    (155.4, 252.2, 196.4),
    (154.5, 248.1, 192.3),
    (153.6, 243.5, 187.7),
    (152.6, 239.5, 183.7),
    (151.6, 236.0, 180.2),
    (150.6, 233.1, 177.3),
    (150.1, 231.8, 176.0),
    (150.1, 232.2, 176.4),
    (150.2, 234.5, 178.7),
    (150.1, 239.1, 183.3),
    (149.1, 252.0, 196.2),
    (148.7, 261.1, 205.3),
    (149.3, 258.4, 202.6),
    (150.3, 252.9, 197.1),
    (150.0, 238.9, 183.1),
    (159.9, 212.9, 107.5),
    (158.9, 203.9, 98.5),
    (161.0, 207.0, 101.6),
    (162.5, 211.5, 106.1),
    (164.5, 217.5, 112.1),
    (166.6, 224.8, 119.4),
    (168.5, 232.3, 126.9),
    (170.1, 238.5, 133.1),
    (171.1, 242.7, 137.3),
    (171.6, 244.4, 139.0),
    (171.5, 242.4, 137.0),
    (171.1, 238.1, 132.7),
    (170.2, 232.1, 126.7),
    (169.1, 225.6, 120.2),
    (167.5, 220.2, 114.8),
    (165.6, 215.3, 109.9),
    (164.3, 211.4, 106.0),
    (162.5, 209.4, 104.0),
    (160.6, 209.3, 103.9),
    (159.4, 211.4, 106.0),
    (158.4, 215.4, 110.0),
    (157.4, 224.4, 119.0),
    (155.5, 232.4, 127.0),
    (155.4, 240.4, 135.0),
    (154.5, 247.4, 142.0),
    (154.4, 249.5, 144.1),
    (154.4, 248.4, 143.0),
    (155.4, 243.4, 138.0),
    (156.2, 234.4, 129.0),
    (157.2, 227.4, 122.0),
    (158.4, 220.4, 115.0),
    (159.6, 213.5, 108.1),
    (161.1, 208.3, 102.9),
    (161.8, 203.4, 98.0),
    (162.4, 200.6, 95.2),
    (162.4, 199.5, 94.1),
    (162.4, 199.6, 94.2),
    (162.7, 200.6, 95.2),
    (163.6, 202.5, 97.1),
    (164.6, 205.3, 99.9),
    (165.6, 208.4, 103.0),
    (167.2, 211.6, 106.2),
    (168.3, 215.5, 110.1),
    (169.7, 219.4, 114.0),
    (171.3, 223.4, 118.0)
]


def convert_params(x):
    resize = (x[1]-x[2])*2+50
    detaX = x[0] - resize/2
    detaY = x[2]
    return round(resize), round(detaX), round(detaY)


def pic2video(pic_path, dst_path, size):
    filelist = os.listdir(pic_path)
    filelist.sort()
    fps = 30
    fourcc = cv2.VideoWriter_fourcc('m', 'p', '4', 'v')
    video = cv2.VideoWriter(dst_path, fourcc, fps, size)
    for item in filelist:
        if item.endswith('.jpg'):
            item = pic_path + '/' + item
            img = cv2.imread(item)
            video.write(img)
    video.release()


def main():
    params = list(map(convert_params, source_config))
    back_images = os.listdir("data/images")
    back_images.sort()
    front_images = os.listdir("results/3param")
    front_images.sort()
    for i in range(len(params)):
        p = params[i]
        im1 = Image.open("data/images/" + back_images[i])
        im2 = Image.open("results/3param/" + front_images[i])
        back_im = im1.copy()
        resized_im2 = im2.resize((p[0], p[0]), Image.ANTIALIAS)
        back_im.paste(resized_im2, (p[1], p[2]), resized_im2)
        back_im.save("results/dst/"+back_images[i])
    pic2video('results/dst/', 'results/out.mp4', (324, 576))


if __name__ == "__main__":
    main()
